// .include "/jsim/nominal.jsim"
// .include "/jsim/stdcell.jsim"
// .include "/lab6pc.jsim"
.include "beta-pc-incr.jsim"

**PC block
.subckt pc clk reset pcsel_pre[2:0] ia[31:0] incr_out[31:0] incr_jump[31:0] jt[31:0]

Xpcs pcsel_pre[2:0] pcsel[2:0] buffer_4

** signal definition for xadr[31:0]
	Xxadra xadr[31] constant1
	Xxadrb xadr[30:4] constant0
	Xxadrc xadr[3] constant1
	Xxadrd xadr[2:0] constant0

** signal definition for illop[31:0]
	Xillopa illop[31] constant1
	Xillopb illop[30:3] constant0
	Xillopc illop[2] constant1
	Xillopd illop[1:0] constant0
	
Xincr_in incr_out[30:0] incr_in[30:0] buffer
Xincr_ina ia[31] incr_in[31] buffer
Xincrj_in incr_jump[30:0] incrj_in[30:0] buffer
Xincrj_ina ia[31] incrj_in[31] buffer 

	
** Select between xadr and pc+4 (incr_out)
Xpc_muxa pcsel[2]#32 incr_in[31:0] xadr[31:0] pcsel_a[31:0] mux2

** select rest of pc with pc[1:0]
Xpc_muxb pcsel[1]#32 pcsel[0]#32 pcsel_a[31:0] jt[31:0] incrj_in[31:0] illop[31:0] pcres_in[31:0] mux4

** Reset Mux -- when reset=1 pc = 80000000
Xpc_reseta reset pcres_in[31] vdd pc_in[31] mux2 
Xpc_resetb reset#31 pcres_in[30:0] 0#31 pc_in[30:0] mux2  

** PC main block 
Xpc_reg pc_in[31:0] clk#32 ia_pre[31:0] dreg
Xiabuff ia_pre[31:0] ia[31:0] buffer_4
Xincr4 ia[31:0] incr_out[31:0] pc_increment
.ends

	
